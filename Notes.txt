These notes contain all the file modifications and terminal commands used to deviate from the forked repo


Module 01
---------

// Change to the server directory
cd xrwvm-fullstack_developer_capstone/server

// Setup virtual environment for Django to run
pip install virtualenv
virtualenv djangoenv
source djangoenv/bin/activate

// Install the necessary Python packages in your virtual environment. The package names have already been provided in requirements.txt.
python3 -m pip install -U -r requirements.txt


// Added 'frontend/static/ to server/djangoproj/settings.py
// Added  STATICFILES_DIRS to server/djangoproj/settings.py

// Perform migrations
python3 manage.py makemigrations

// Run migrations
python3 manage.py migrate

// Start the local dev server
python3 manage.py runserver


// On the file editor, open the server/djangoproj/settings.py in the editor and set the ALLOWED_HOSTS and CSRF_TRUSTED_ORIGINS to reflect your Django app's root URL.
Changed ALLOWED_HOSTS and CSRF_TRUSTED_ORIGINS


// Modified server/frontend/static/About.html to include style sheet and content changes

// Added url pattern to wire up the about page inside of djangoproj/urls.py
path('about/', TemplateView.as_view(template_name="About.html")),

// Added Contact Us page and content

// Added url pattern to wire up the new Contact page.
path('contact/', TemplateView.as_view(template_name="Contact.html")),



Module 02
---------
// Had to set the virtual environment back up. This wouldn't be necessary on my local machine
cd /home/project/xrwvm-fullstack_developer_capstone/server

pip install virtualenv
virtualenv djangoenv
source djangoenv/bin/activate

python3 -m pip install -U -r requirements.txt

python3 manage.py makemigrations

python3 manage.py migrate

// Create a superuser by running the following command.
python3 manage.py createsuperuser

superuser/superuser@nowhere.com/supass

// Run the server again:
python3 manage.py runserver

// Open a New Terminal and switch to the client directory.
cd /home/project/xrwvm-fullstack_developer_capstone/server/frontend

// Install all required packages.
npm install

// Run the following command to build the client.
npm run build

// Open server/djangoproj/settings.py in the editor. Under TEMPLATES, 
// added more to DIRS and STATICFILES_DIRS


// Uncommented some code in djangoapp/views.py
// Wired up login in server/djangoapp/uerls.py and server/djangoproj/urls.py

// Wired up logout in djangoapp/views.py and djangoapp/urls.py and server/frontend/static/Home.html

// Open a new terminal and run the following command.
cd /home/project/xrwvm-fullstack_developer_capstone/server/frontend
npm run build

// Added register view in djangoapp/views.py
// Configured route in djangoapp/urls.py
// Created Register.jsx
// Configured routes in frontend/src/App.js
// Reran npm run build
// Configured routes in server/djangoproj/urls.py


// Go to the folder: cd /home/project/xrwvm-fullstack_developer_capstone/server/database
// Every time we change the app.js file, we have to make docker build the nodeapp
docker build . -t nodeapp

// To run the server, use this:
docker-compose up